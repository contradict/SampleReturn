<?xml version="1.0"?>
<!-- vim: set fenc=utf-8 et sts=4 ft=xml : -->
<launch>

    <!-- IEEE1394 camera driver -->
    <!-- Nodelet Host process -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="camera_process"
        args="manager"
        output="log"
        >
    </node>
    <node
         pkg="nodelet"
         type="nodelet"
         name="left"
         args="load camera1394/driver /camera_process"
         ns="/stereo"
         output="log"
         >

        <param name="guid" type="string" value="00b09d0100a8563d"/>
        <param name="video_mode" value="640x480_mono8"/>
        <param name="frame_id" value="navigation_stereo"/>
        <param name="frame_rate" value="15"/>
        <param name="bayer_pattern" value="rggb"/>
        <param name="camera_info_url"
               type="string"
               value="file://$(find samplereturn)/calibration/ffmv-left.yaml" />
        <remap from="camera" to="left" />
    </node>
    <node
         pkg="nodelet"
         type="nodelet"
         name="right"
         args="load camera1394/driver /camera_process"
         ns="/stereo"
         output="log"
         >

        <param name="guid" type="string" value="00b09d0100a8566e"/>
        <param name="video_mode" value="640x480_mono8"/>
        <param name="frame_id" value="navigation_stereo"/>
        <param name="frame_rate" value="15"/>
        <param name="bayer_pattern" value="rggb"/>
        <param name="camera_info_url"
               type="string"
               value="file://$(find samplereturn)/calibration/ffmv-right.yaml" />
        <remap from="camera" to="right" />
    </node>

    <!-- Debayer -->
    <node pkg="nodelet"
          type="nodelet"
          name="debayer_left"
          args="load image_proc/debayer /camera_process"
          ns="/stereo/left"
          output="log"
          >
    </node>
    <node pkg="nodelet"
          type="nodelet"
          name="debayer_right"
          args="load image_proc/debayer /camera_process"
          ns="/stereo/right"
          output="log"
          >
    </node>

    <!-- Display images -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="left_display"
        args="load image_view/image /camera_process"
        ns="/stereo/left"
        output="log"
        >

        <remap  from="image" to="image_color"/>
    </node>
    <node
        pkg="nodelet"
        type="nodelet"
        name="right_display"
        args="load image_view/image /camera_process"
        ns="/stereo/right"
        output="log"
        >

        <remap from="image" to="image_color"/>
    </node>

    <!-- Rectify images -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="rect_left"
        args="load image_proc/rectify /camera_process"
        ns="/stereo/left"
        output="log"
        >
        <remap from="image" to="image_mono"/>
    </node>
    <node
        pkg="nodelet"
        type="nodelet"
        name="rect_right"
        args="load image_proc/rectify /camera_process"
        ns="/stereo/right"
        output="log"
        >
        <remap from="image" to="image_mono"/>
    </node>

    <!-- Display rectified images -->
    <!--
    <node
        pkg="image_view"
        type="image_view"
        name="left_rect_display"
        ns="/stereo/left/"
        output="log"
        >

        <remap from="image" to="image_rect"/>
    </node>
    <node
        pkg="image_view"
        type="image_view"
        name="right_rect_display"
        ns="/stereo/right/"
        output="log"
        >

        <remap from="image" to="image_rect"/>
    </node>
    -->

    <!-- Compute Stereo -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="stereo_image_disparity"
        args="load stereo_image_proc/disparity /camera_process"
        ns="/stereo"
        output="log"
        >
        <param name="correlation_window_size" type="int" value="17"/>
        <param name="min_disparity" type="int" value="0"/>
        <param name="disparity_range" type="int" value="256"/>
        <param name="uniqueness_ratio" type="int" value="5"/>
        <param name="texture_threshold" type="int" value="1000"/>
        <param name="approximate_sync" type="bool" value="true"/>
    </node>

    <!-- Compute Stereo Point Cloud -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="stereo_image_points"
        args="load stereo_image_proc/point_cloud2 /camera_process"
        ns="/stereo"
        output="log"
        >
        <param name="approximate_sync" type="bool" value="true"/>
        <remap from="left/image_rect_color" to="left/image_color"/>
    </node>

    <!-- Display Disparity -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="vis_disparity"
        args="load image_view/disparity /camera_process"
        ns="/stereo"
        output="log"
        >

        <remap from="image" to="disparity"/>
    </node>

    <!-- Run VSLAM on live stereo data -->
    <!--
    <node
        pkg="vslam_system"
        type="stereo_vslam_node"
        name="stereo_vslam_node"
        args="$(find vocabulary_tree)/holidays.tree $(find vocabulary_tree)/holidays.weights $(find vslam_system)/data/calonder.rtc"
        cwd="node"
        >
        <remap from="left/image_rect" to="stereo/left/image_rect"/>
        <remap from="right/image_rect" to="stereo/right/image_rect"/>
        <remap from="left/camera_info" to="stereo/left/camera_info"/>
        <remap from="right/camera_info" to="stereo/right/camera_info"/>
    </node>
    -->

    <node pkg="sync_images" type="sync_images" name="sync_images" output="log">
      <param name="pub_topic_left"  value="sync/left/image_rect"/>
      <param name="pub_topic_right" value="sync/right/image_rect"/>
      <param name="pub_info_left"   value="sync/left/camera_info"/>
      <param name="pub_info_right"  value="sync/right/camera_info"/>
      <param name="sub_topic_left"  value="stereo/left/image_rect"/>
      <param name="sub_topic_right" value="stereo/right/image_rect"/>
      <param name="sub_info_left"   value="stereo/left/camera_info"/>
      <param name="sub_info_right"  value="stereo/right/camera_info"/>
    </node>

  <!-- Run stereo VSLAM on wide stereo data -->
  <group ns="/sync">
      <node name="stereo_vslam_node"
            pkg="vslam_system"
            type="stereo_vslam_node"
            args="$(find vocabulary_tree)/holidays.tree $(find vocabulary_tree)/holidays.weights $(find vslam_system)/data/calonder.rtc"
            cwd="node"
            output="screen"
            />
        <!--launch-prefix="/usr/bin/xterm -e /usr/bin/gdb - -args"-->
  </group>

  <node name="vo_tracks_view" pkg="image_view" type="image_view" output="log">
    <remap from="image" to="/vslam/vo_tracks/image" />
  </node>


  <!-- Publishes the voxel grid to rviz for display -->
  <node pkg="costmap_2d"
      type="costmap_2d_markers"
      name="voxel_visualizer"
      output="log"
      >
    <remap from="voxel_grid" to="/costmap_node/costmap/voxel_grid"/>
  </node>

  <node pkg="costmap_2d"
      type="costmap_2d_cloud"
      name="voxel_visualizer_cloud"
      output="log"
      >
    <remap from="voxel_grid" to="/costmap_node/costmap/voxel_grid"/>
  </node>

  <!-- Run the costmap node -->
  <node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node" output="log">
    <rosparam file="$(find samplereturn)/launch/example_params.yaml" command="load" ns="costmap" />
  </node>

  <!-- Run the tf broadcaster and fake odometry -->
  <!--<node name="tf_broadcaster" pkg="robot_setup_tf" type="tf_broadcaster" />
  <node name=-->

  <!-- Costmap 2D -->

    <!-- Calibration tool -->
    <!--

    <node
        pkg="camera_calibration"
        type="cameracalibrator.py"
        name="calibrator"
        args="- -size 9x6 - -square 0.120 - -approximate .020"
        >
        <remap from="right" to="/stereo/right/debayer/image_mono"/>
        <remap from="left" to="/stereo/left/debayer/image_mono"/>
        <remap from="right_camera" to="/stereo/right"/>
        <remap from="left_camera" to="/stereo/left"/>
      </node>-->

</launch>
