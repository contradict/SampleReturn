data_playback: true             # Set to true for playback, set to false on the real system.

##############################
#########IMU PARAMETERS#######
##############################
# The IMU measurement model used in msf contains two types of sensor errors, 
# a high frequency additive white noise and 
# a slower varying sensor bias.  
# See the following link for more information 
# https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics
# 
# The white noise is characterized with the continuous time noise spectral density. 
# The noise spectral density is sometime also referred to as noise density.
# The units of the noise spectral density are:
#  acc:  [m/s^2/sqrt(Hz)]
#  gyro: [rad/s/sqrt(Hz)]
# The noise spectral density can be found in the datasheet of the IMU.
# 
# The variation of the bias is characterized as a random walk. 
# See https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics for more information
# The units of the random walk are:
#  acc:  [m/s^3/sqrt(Hz)]
#  gyro: [rad/s^2/sqrt(Hz)]
 
####### ADIS 16448
core/core_noise_acc: 0.0022563    # [m/s^2/sqrt(Hz)] 
core/core_noise_gyr: 0.0004       # [rad/s/sqrt(Hz)] 

core/core_fixed_bias: false
core/core_noise_accbias: 8e-5     # [m/s^3/sqrt(Hz)]
core/core_noise_gyrbias: 3e-6     # [rad/s^2/sqrt(Hz)]

####### mpu6000
#core/core_noise_acc: 0.003924    # [m/s^2/sqrt(Hz)] mpu6000 datasheet
#core/core_noise_gyr: 0.00008726  # [rad/s/sqrt(Hz)] mpu6000 datasheet

#core/core_fixed_bias: true
#core/core_noise_gyrbias: 0.0     # For fixed bias we do not need process noise.
#core/core_noise_accbias: 0.0     # For fixed bias we do not need process noise.

core/world_frame_name: "map"
core/imu_frame_name: "microstrain"

#######################################
#########Pose Sensor Parameters #######
#######################################
pose_sensor/pose_absolute_measurements: true
pose_sensor/pose_measurement_world_sensor: true  # Selects if sensor measures its position 
                                                  # w.r.t. world (true, e.g. Vicon) or the position 
                                                  # of the world coordinate system w.r.t. the 
                                                  # sensor (false, e.g. ethzasl_ptam).
wheel_visual_sensor/pose_delay: 0.00                      # [s] delay of pose sensor w.r.t. imu

odometry_sensor/odometry_absolute_measurements: false
odometry_sensor/odometry_measurement_world_sensor: true

# For the pose sensor noise levels use the std deviation the units are
#  position: [m]
#  orientation: [rad]
wheel_visual_sensor/pose_use_fixed_covariance: false
wheel_visual_sensor/pose_noise_meas_p: 0.01              # [m]
wheel_visual_sensor/pose_noise_meas_q: 0.02              # [rad]

wheel_visual_sensor/odometry_use_fixed_covariance: false
wheel_visual_sensor/odometry_noise_meas_p: 0.01              # [m]
wheel_visual_sensor/odometry_noise_meas_q: 0.02              # [rad]

wheel_visual_sensor/pose_initial_scale: 1
wheel_visual_sensor/pose_fixed_scale: true
wheel_visual_sensor/pose_noise_scale: 0.0     

# Transformation that expresses the position and orientation of the gravity aligned world frame 
# w.r.t the vision/camera frame
wheel_visual_sensor/pose_fixed_p_wv: true              
wheel_visual_sensor/pose_noise_p_wv: 0.0                  
wheel_visual_sensor/pose_fixed_q_wv: true
wheel_visual_sensor/pose_noise_q_wv: 0.0                  

wheel_visual_sensor/odometry_fixed_p_d: false
wheel_visual_sensor/odometry_noise_p_d: 0.0
wheel_visual_sensor/odometry_fixed_yaw_d: false
wheel_visual_sensor/odometry_noise_yaw_d: 0.0


# Transformation that expresses the position and orientation of the pose-sensor w.r.t. the IMU 
# frame of reference, expressed in the IMU frame of reference.
wheel_visual_sensor/pose_fixed_p_ic: true
wheel_visual_sensor/pose_noise_p_ic: 0.0
wheel_visual_sensor/pose_fixed_q_ic: true
wheel_visual_sensor/pose_noise_q_ic: 0.0

wheel_visual_sensor/odometry_fixed_p_ib: true
wheel_visual_sensor/odometry_noise_p_ib: 0.0
wheel_visual_sensor/odometry_fixed_q_ib: true
wheel_visual_sensor/odometry_noise_q_ib: 0.0

wheel_visual_sensor/init/q/x: 0.0
wheel_visual_sensor/init/q/y: 1.0
wheel_visual_sensor/init/q/z: 0.0
wheel_visual_sensor/init/q/w: 0.0
wheel_visual_sensor/init/p/x: -0.455
wheel_visual_sensor/init/p/y:  0.000
wheel_visual_sensor/init/p/z:  0.633

pose_sensor/init/q_ic/x:  0.406
pose_sensor/init/q_ic/y: -0.406
pose_sensor/init/q_ic/z: -0.579
pose_sensor/init/q_ic/w:  0.579
pose_sensor/init/p_ic/x: -0.596   
pose_sensor/init/p_ic/y:  0.050
pose_sensor/init/p_ic/z: -0.706

odometry_sensor/init/q_ib/x: 0.0
odometry_sensor/init/q_ib/y: 1.0
odometry_sensor/init/q_ib/z: 0.0
odometry_sensor/init/q_ib/w: 0.0
odometry_sensor/init/p_ib/x: -0.455   
odometry_sensor/init/p_ib/y:  0.000
odometry_sensor/init/p_ib/z:  0.633

