<?xml version="1.0"?>
<!-- vim: set fenc=utf-8 et sts=4 ft=xml : -->
<launch>

    <!-- begin test arguments -->
    <machine name="search"
             address="localhost"/>
    <machine name="navigate"
             address="localhost"/>
    <!-- end test arguments -->
    
    <include file="$(find executive)/launch/executive.launch">
        <arg name="odometry_frame" value="fake_odom"/>
        <arg name="world_fixed_frame" value="fake_map"/>
    </include>

    <!-- crap below here is for test only -->

    <node
        name="navigate_audio"
        pkg="sound_play"
        type="soundplay_node.py"
        ns="/io/audio">
        <remap from="robotsound" to="navigate_soundplay"/>
    </node>
    
    <include file="$(find samplereturn)/launch/joystick.launch"/>

    <include file="$(find samplereturn)/launch/planner_dumb.launch">
        <arg name="odometry_frame" value="fake_odom"/>
    </include>

    <arg name="map_config" value="maps/map_park_fake.yaml"/>
    <node
        name="map_server"
        pkg="map_server"
        type="map_server"
        ns="/processes/planner"
        output="log"
        args="$(find samplereturn)/$(arg map_config)"
        >
    </node>

    <node
        name="navigate_announcer"
        pkg="samplereturn"
        type="announcer.py"
        ns="/io/audio">
        <remap from="audio_in" to="navigate"/>
        <remap from="audio_out" to="navigate_soundplay"/>
    </node>

    <!-- joint state publishing -->
    <param name="robot_description"
           command="$(find xacro)/xacro.py '$(find samplereturn)/urdf/robot.xacro'" />

    <node name="state_publisher"
          pkg="robot_state_publisher" 
          type="robot_state_publisher"
          output="log"
          ns="/motion">
        <remap from="joint_states" to="platform_joint_state"/>
        <param name="publish_frequency" type="double" value="10"/>

    </node>

    <include file="$(find beacon_finder)/launch/beacon_finder.launch">
        <arg name="world_fixed_frame" value="fake_map"/>
    </include>
</launch>
