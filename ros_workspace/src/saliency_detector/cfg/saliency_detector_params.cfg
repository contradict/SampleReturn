#!/usr/bin/env python
PACKAGE = "saliency_detector"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("debug_output", bool_t, 0, "Publish debug images", False)

gen.add("bms_sample_step", int_t, 0, "BMS sample step", 8, 1, 10)
gen.add("bms_opening_width", int_t, 0, "BMS opening width", 13, 1, 15)
gen.add("bms_dilation_width_1", int_t, 0, "BMS dilation width 1", 1, 1, 10)
gen.add("bms_dilation_width_2", int_t, 0, "BMS dilation width 2", 1, 1, 10)
gen.add("bms_blur_std", double_t, 0, "BMS blur size", 0, 0, 10)
gen.add("bms_normalize", bool_t, 0, "Use L2 normalization for BMS", True)
gen.add("bms_handle_border", bool_t, 0, "Handle image borders", False)

gen.add("bms_thresh", int_t, 0, "Post BMS threshold", 150, 0, 255)
gen.add("bms_thresh_on", bool_t, 0, "Threshold BMS Map", False)
gen.add("bms_top_trim", double_t, 0, "Pixels from the top of the horizon to ignore", 500, 0, 1000)
gen.add("bms_img_width", double_t, 0, "Width of computed BMS image in pixels", 600, 10, 4000)

gen.add("blobDetect_on", bool_t, 0, "Run blob detect", True)

gen.add("minDistBetweenBlobs", double_t, 0, "Minimum pixel spacing between blobs", 15, 0, 100)

gen.add("filterByColor", bool_t, 0, "Filter blobs by color", True)

gen.add("filterByArea", bool_t, 0, "Filter blobs by area", True)
gen.add("minArea", double_t, 0, "Minimum blob area, in pixels", 10, 1, 100)
gen.add("maxArea", double_t, 0, "Maximum blob area, in pixels", 6000, 1, 100000)

gen.add("filterByConvexity", bool_t, 0, "Filter blobs by convexity", True)
gen.add("minConvexity", double_t, 0, "Minimum blob convexity ratio", 0.7, 0, 1.0)
gen.add("maxConvexity", double_t, 0, "Maximum blob convexity ratio", 1.0, 0, 1.0)

#gen.add("filterByCircularity", bool_t, 0, "Filter blobs by circularity", False)
#gen.add("filterByInertia", bool_t, 0, "Filter blobs by inertia", False)

gen.add("blobColor", int_t, 0, "Color of blob to extract", 255, 0, 255)
gen.add("minThreshold", double_t, 0, "Min blob threshold", 10, 1, 255)
gen.add("maxThreshold", double_t, 0, "Max blob threshold", 50, 1, 255)
gen.add("thresholdStep", double_t, 0, "Threshold step size", 10, 1, 255)
gen.add("minRepeatability", double_t, 0, "Min repeatability", 2, 1, 255)

gen.add("filterbyRealArea", bool_t, 0, "Filter blobs based on projected area", True)
gen.add("minRealArea", double_t, 0, "Minimum blob area, in sq cm", 4.0, 0.0, 40.0)
gen.add("maxRealArea", double_t, 0, "Maximum blob area, in sq cm", 130.0, 0.0, 400.0)

exit(gen.generate(PACKAGE, "saliency_detector", "saliency_detector_params"))
