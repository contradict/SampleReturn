#!/usr/bin/env python
PACKAGE = "detection_filter"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("max_dist", double_t, 0, "Maximum distance from measurement to filter", 0, 0, 1)
gen.add("max_cov", double_t, 0, "Maximum covariance before filter is killed", 0, 0, 10)
gen.add("max_pub_cov", double_t, 0, "Maximum covariance to publish filter", 0, 0, 1)
gen.add("max_pub_vel", double_t, 0, "Maximum velocity to publish filter", 0, 0, 1)

gen.add("process_noise_cov", double_t, 0, "Process Noise Covariance", 0, 0, 1)
gen.add("measurement_noise_cov", double_t, 0, "Measurement Noise Covariance", 0, 0, 1)
gen.add("error_cov_post", double_t, 0, "Error Covariance Post", 0, 0, 1)
gen.add("period", double_t, 0, "Measurement Period", 0, 0, 1)

gen.add("PDgO", double_t, 0, "Probability of detection given object in view", 0.99, 0, 1)
gen.add("PDgo", double_t, 0, "Probability of detection when no object is visible", 0.01, 0, 1)
gen.add("PO_init", double_t, 0, "Initial probability of object", 0.01, 0, 1)

gen.add("perform_color_check", bool_t, 0, "Check measurement color against model", False)

gen.add("max_colormodel_distance", double_t, 0,
        "Maximum color model distance for same filter", 0.3, 0, 1.0)

gen.add("clear_filters",bool_t, 0, "Clear all filters", False)

exit(gen.generate(PACKAGE, "detection_filter", "ManipulatorKalmanFilter"))
