<?xml version="1.0"?>
<!-- vim: set fenc=utf-8 et sts=4 ft=xml : -->
<launch>

    <arg name="bags"/>

    <arg name="user" default="robot"/>
    <arg name="path" default="Desktop"/>
    <arg name="kind" default="install"/>

    <param name="use_sim_time" value="true" type="bool"/>
    <arg name="start_paused" default="True"/>
    <arg name="executive_config" default="$(find executive)/config/executive.yaml"/>

    <include file="$(find samplereturn)/launch/machine_definitions.launch">
        <arg name="user" value="$(arg user)"/>
        <arg name="path" value="$(arg path)"/>
        <arg name="kind" value="$(arg kind)"/>
        <arg name="replay" default="true"/>
    </include>

<!--
            tf
            diagnostics
            /cameras/manipulator/left/camera_info
            /cameras/manipulator/left/image_raw
            /cameras/manipulator/right/camera_info
            /cameras/manipulator/right/image_raw
            /cameras/navigation/port/left/camera_info
            /cameras/navigation/port/left/image_raw
            /cameras/navigation/port/right/camera_info
            /cameras/navigation/port/right/image_raw
            /cameras/navigation/starboard/left/camera_info
            /cameras/navigation/starboard/left/image_raw
            /cameras/navigation/starboard/right/camera_info
            /cameras/navigation/starboard/right/image_raw
            /cameras/navigation/center/left/camera_info
            /cameras/navigation/center/left/image_raw
            /cameras/navigation/center/right/camera_info
            /cameras/navigation/center/right/image_raw
            /cameras/search/center/image_raw
            /cameras/search/center/camera_info
            /io/battery_voltage
            /io/gpio_read
            /io/gpio_write
            /io/joy
            /io/pause_state
            /io/kvh/imu
            /io/phidget_0/data_raw
            /io/phidget_0/mag
            /io/microstrain_3dm_gx3_35/imu
            /io/microstrain_3dm_gx3_35/gps
            /io/microstrain_3dm_gx3_35/magnetometer
            /motion/CAN/status_word
            /motion/current_motion_mode
            /motion/joystick_command
            /motion/manipulator/motor_states/ttyUSB0
            /motion/odometry
            /motion/planner_command
            /motion/platform_joint_state
-->
    <node
        name="replay"
        pkg="rosbag"
        type="play"
        output="screen"
        args="--clock --pause
        --topics
            tf
            /cameras/manipulator/left/camera_info
            /cameras/manipulator/left/image_raw
            /cameras/manipulator/right/camera_info
            /cameras/manipulator/right/image_raw
            /cameras/navigation/port/left/camera_info
            /cameras/navigation/port/left/image_raw
            /cameras/navigation/port/right/camera_info
            /cameras/navigation/port/right/image_raw
            /cameras/navigation/starboard/left/camera_info
            /cameras/navigation/starboard/left/image_raw
            /cameras/navigation/starboard/right/camera_info
            /cameras/navigation/starboard/right/image_raw
            /cameras/navigation/center/left/camera_info
            /cameras/navigation/center/left/image_raw
            /cameras/navigation/center/right/camera_info
            /cameras/navigation/center/right/image_raw
            /cameras/search/center/image_raw
            /cameras/search/center/camera_info
            /io/battery_voltage
            /io/gpio_read
            /io/gpio_write
            /io/joy
            /io/pause_state
            /io/phidget_0/data_raw
            /io/phidget_0/mag
            /motion/CAN/status_word
            /motion/current_motion_mode
            /motion/joystick_command
            /motion/platform_joint_state
            --bags $(arg bags)
        "
        />


    <include file="$(find samplereturn)/launch/motion.launch">
        <arg name="start_paused" value="$(arg start_paused)"/>
        <arg name="replay" value="true"/>
    </include>

    <include file="$(find samplereturn)/launch/navigation_camera.launch">
        <arg name="run_cameras" default="false"/>
    </include>
    <include file="$(find samplereturn)/launch/search_camera.launch">
        <arg name="run_cameras" default="false"/>
    </include>
    <include file="$(find samplereturn)/launch/manipulator_camera.launch">
        <arg name="run_cameras" default="false"/>
    </include>
    <!--
    -->

    <include file="$(find samplereturn)/launch/audio.launch"/>

    <include file="$(find saliency_detector)/launch/filter_saliency_detector.launch"/>
    <include file="$(find linemod_detector)/launch/manipulator_linemod_2d.launch"/>
    <include file="$(find samplereturn)/launch/planner_dumb.launch"/>
    <include file="$(find motion_planning)/launch/motion_planning.launch"/>
    <!--
    -->
    <include file="$(find pose_ukf)/launch/pitchroll_ukf.launch"/>

    <include file="$(find sun_pointing)/launch/sun_pointing.launch"/>

    <include file="$(find beacon_finder)/launch/april_beacon_finder.launch"/>
    <include file="$(find beacon_localizer)/launch/beacon_localizer.launch"/>
    <include file="$(find fence_detection)/launch/fence_detection.launch"/>

    <!--
    <include file="$(find solar_fisheye)/launch/molamola.launch"/>
    -->

    <!-- Launch executive last -->
    <include file="$(find executive)/launch/executive.launch">
        <arg name="executive_config" value="$(arg executive_config)"/>
    </include>


</launch>
