# Travis Continuous Integration Configuration File, based on ..
language:
  - cpp
  - python
python:
  - "2.7"
compiler:
  - gcc
env:
  - OPENCV_VERSION=2 ROS_DISTRO=hydro
  - OPENCV_VERSION=3 ROS_DISTRO=hydro
before_install: # Use this to prepare the system to install prerequisites or dependencies
  # Define some config vars
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME"
  - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y python-rosdep python-rosinstall python-catkin-tools ros-$ROS_DISTRO-catkin
  # MongoDB hack - I don't fully understand this but its for moveit_warehouse
  - sudo apt-get remove -y mongodb mongodb-10gen
  - sudo apt-get install -y mongodb-clients mongodb-server -o Dpkg::Options::="--force-confdef" # default actions
  # Setup rosdep
  - sudo rosdep init
  - rosdep update
install: # Use this to install any prerequisites or dependencies necessary to run your build
  # Create workspace
  - mkdir -p ~/ros/ws_$REPOSITORY_NAME/src
  - cd ~/ros/ws_$REPOSITORY_NAME
  - wstool init src
  #- wstool set hogehoge http://github.com/hogehoge/hogehoge --git -t src 
  #- wstool update -j10 -t src
  - ln -s $CI_SOURCE_PATH src/$REPOSITORY_NAME # Link the repo we are testing to the new workspace
  - if [ $OPENCV_VERSION == 2 ]; then  sed -i 's@libopencv-dev@opencv2@' src/$REPOSITORY_NAME/*/package.xml ; fi
  - if [ $OPENCV_VERSION == 3 ]; then  sed -i 's@libopencv-dev@opencv3@' src/$REPOSITORY_NAME/*/package.xml ; fi
  # Install dependencies for source repos
  - rosdep install -r -n --from-paths . --ignore-src --rosdistro $ROS_DISTRO -y
before_script: # Use this to prepare your build for testing e.g. copy database configurations, environment variables, etc.
  - source /opt/ros/$ROS_DISTRO/setup.bash
script: # All commands must exit with code 0 on success. Anything else is considered failure.
  - cd ~/ros/ws_$REPOSITORY_NAME
  - catkin build -p1 -j1
  - catkin run_tests -p1 -j1
  - catkin_test_results --all build
  - catkin clean -b
  - catkin config --install
  - catkin build -p1 -j1
after_failure:
  - find ${HOME}/.ros/test_results -type f -exec echo "== {} ==" \; -exec cat {} \;
  - for file in ${HOME}/.ros/log/rostest-*; do echo "=== $file ==="; cat $file; done